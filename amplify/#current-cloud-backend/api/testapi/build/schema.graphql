type Restrant @aws_api_key @aws_cognito_user_pools {
  id: ID!
  name: String!
  image: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelRestrantConnection @aws_api_key @aws_cognito_user_pools {
  items: [Restrant]
  nextToken: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelRestrantFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  image: ModelStringInput
  and: [ModelRestrantFilterInput]
  or: [ModelRestrantFilterInput]
  not: ModelRestrantFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  getRestrant(id: ID!): Restrant @aws_api_key @aws_cognito_user_pools
  listRestrants(filter: ModelRestrantFilterInput, limit: Int, nextToken: String): ModelRestrantConnection @aws_api_key @aws_cognito_user_pools
}

input CreateRestrantInput {
  id: ID
  name: String!
  image: String
}

input UpdateRestrantInput {
  id: ID!
  name: String
  image: String
}

input DeleteRestrantInput {
  id: ID!
}

type Mutation {
  createRestrant(input: CreateRestrantInput!, condition: ModelRestrantConditionInput): Restrant
  updateRestrant(input: UpdateRestrantInput!, condition: ModelRestrantConditionInput): Restrant
  deleteRestrant(input: DeleteRestrantInput!, condition: ModelRestrantConditionInput): Restrant
}

input ModelRestrantConditionInput {
  name: ModelStringInput
  image: ModelStringInput
  and: [ModelRestrantConditionInput]
  or: [ModelRestrantConditionInput]
  not: ModelRestrantConditionInput
}

type Subscription {
  onCreateRestrant(owner: String): Restrant @aws_subscribe(mutations: ["createRestrant"]) @aws_api_key @aws_cognito_user_pools
  onUpdateRestrant(owner: String): Restrant @aws_subscribe(mutations: ["updateRestrant"]) @aws_api_key @aws_cognito_user_pools
  onDeleteRestrant(owner: String): Restrant @aws_subscribe(mutations: ["deleteRestrant"]) @aws_api_key @aws_cognito_user_pools
}
